<?xml version="1.0"?>
<package >
  <metadata>
    <id>$id$</id>
    <version>$version$</version>
    <title>$title$</title>
    <authors>Dan Vanderboom</authors>
    <owners>Dan Vanderboom</owners>
    <licenseUrl>https://github.com/OrleansContrib/Orleans.TelemetryConsumers.MetricsTracker/blob/master/LICENSE</licenseUrl>
    <projectUrl>https://github.com/OrleansContrib/Orleans.TelemetryConsumers.MetricsTracker</projectUrl>
    <!--<iconUrl>http://ICON_URL_HERE_OR_DELETE_THIS_LINE</iconUrl>-->
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>An extension for Orleans which intercepts all telemetry calls, calculates and tracks the metrics on each silo, and aggregates all of the silo metrics into a ClusterMetricsGrain. The metrics stored in this grain can be accessed from any grain or Orleans client.</description>
    <copyright>Copyright 2016</copyright>
    <tags>Measurement Metrics Counters Telemetry APM Monitor</tags>
    <releaseNotes>
      Another attempt to fix silo interceptor logic. New approach: if a previous interceptor exists, call it; otherwise invoke the grain method call; assume previous interceptor
      (or the interceptor at the bottom of the stack) eventually invokes the desired grain method.
      Added new MetricsConfiguration bool field "LogExceptions", which requires a silo interceptor, and uses the Orleans.Runtime.Logger to log exception details (disabled by default).
    </releaseNotes>
  </metadata>
</package>